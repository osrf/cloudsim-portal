// #/usr/bin/env node

"use strict"

let xcloud = require('./cloud_services.js')
let process = require('process')
//
//  Don't forget to load the AWS credentials in the environment
//
if( !process.env.AWS_ACCESS_KEY_ID) {
  console.log('AWS credentials not found!')
  process.exit(-1)
}

if (process.argv.length != 3) {
  console.log('Wrong # of arguments!')
  console.log('Usage: node launch_sim.js "Description"')
  console.log('where Description is the text that will appear on the AWS console')
  process.exit(-1)
}
const aws_console_desc = process.argv[2]

// These key/value pairs  appear in the AWS console (under the instance's Tags tab)
// Name is the default key that is shown
const tags = {'Name': aws_console_desc}

// script is run at launch (see cloud-init project)
const script = `#!/usr/bin/env bash

directory="/home/ubuntu/code"
fullpath="$directory/cloudsim-env.bash"
logpath="$directory/cloudsim.log"
deploypath="$directory/cloudsim_deploy.bash"
optionspath="$directory/cloudsim-options.json"

echo "cloud-init script generated by cloudsim-portal/launch_sim.js" >> $logpath

cat <<DELIM > $optionspath
{"option": "cloudsim"}
DELIM

cat <<DELIM > $fullpath
#ENV FILE CONTENT
VAR="VAR VAR BINX"
DELIM

date >> $logpath
echo "running user data script" >> $logpath
$deploypath
echo "after $deploypath" >> $logpath

`

// this is where we specify what kind of machine we are launching
const machine = {
  desc: 'xenial machine',
  region : 'us-west-1',
  keyName : 'cloudsim',
  hardware : 't2.micro',
  security : ['cloudsim-sim'],
  image : 'ami-d8bdebb8',
}


// place holder for running machine information
let info = {}
xcloud.launchSimulator (machine.region,
                        machine.keyName,
                        machine.hardware,
                        machine.security,
                        machine.image, tags, script,
  function (err, machine) {
    if (err) throw err
    info = machine
    console.log('machine: ' + info.id + ' has been launched.')
    console.log('The ip will appear in 10 secs')
    setTimeout(
      function ()
      {
        xcloud.simulatorStatus(info, console.log)
      }
    , 10000)
  }
)


